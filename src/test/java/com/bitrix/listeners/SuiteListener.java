package com.bitrix.listeners;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.Date;


import org.openqa.selenium.WebDriver;
import org.testng.Assert;
import org.testng.ISuite;
import org.testng.ISuiteListener;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;
import com.bitrix.utility.BitrixLogger;
import com.bitrix.utility.PropertyFileConfigurations;
import com.bitrix.utility.SendReportOnSlackChannel;
import com.bitrix.utility.Utilities;


public class SuiteListener implements ISuiteListener {
	
	public  WebDriver    webDriverInstance;
	public  ISuite suite;
     int                 suitCount = 0;
    private ExtentReports      extent;
    private ExtentHtmlReporter htmlReporter;

	public void onStart(ISuite suite) {
		performStartupActivities(suite);
	}

	public void onFinish(ISuite suite) {
		performCleanupActivities(suite);
		loadSlackReportInstance(suite);
	}

	private void performStartupActivities(ISuite suite) {
		PropertyFileConfigurations config = readPropertiesFile(suite);
		 String filePath = System.getProperty("user.dir") + File.separator
	                + config.getextentReportsPath();
	        filePath += new SimpleDateFormat("dd-MM-yyyy")
	                .format(new Date());
	        try {
	            Files.createDirectories(Paths.get(filePath));
	        } catch (IOException e) {
	           BitrixLogger.debug("Error while creating  extent file report directory", e);
	        }
	        htmlReporter = new ExtentHtmlReporter(filePath + File.separator +  "Extent_"+ new SimpleDateFormat("E-dd-MMM-yyyy").format(new Date()) + ".html");
	        htmlReporter.config().setEncoding("utf-8");
	        htmlReporter.config().setDocumentTitle("Extent reports");
	        htmlReporter.config().setReportName("Automation Test Result");
	        htmlReporter.config().setTheme(Theme.DARK);

	        extent = new ExtentReports();
	        extent.attachReporter(htmlReporter);
	        suite.setAttribute("extentReport", extent);  // Setting extent value in extentReport


	        extent.setSystemInfo("Automation Tester", "Ashish Goyal");
	        extent.setSystemInfo("Organization", "Ashish Automation Labs");
	        extent.setSystemInfo("Build No", "WA-11122");
	}

	public  PropertyFileConfigurations readPropertiesFile(ISuite suite) {
		PropertyFileConfigurations config = new PropertyFileConfigurations();
		config.loadConfigurations();
		suite.setAttribute("configurations", config);
		return config;
	}
	
	
	 private void performCleanupActivities(ISuite suite) {
	        extent.flush();
	        suite.removeAttribute("configurations");        
	    }
	 
	 public void loadSlackReportInstance(ISuite suite ) {
		 PropertyFileConfigurations config= readPropertiesFile(suite);
    	 String filePath = System.getProperty("user.dir") +  File.separator
                 + config.getextentReportsPath();
         filePath += new SimpleDateFormat("dd-MM-yyyy")
                 .format(new Date());
       
         Utilities.tempMethodForThreadSleep(5000);
                 
         String reportPath =filePath + File.separator +"Extent_"+ new SimpleDateFormat("E-dd-MMM-yyyy").format(new Date()) + ".html";
     
         try{
        SendReportOnSlackChannel sendReport = new SendReportOnSlackChannel();
         sendReport.sendTestExecutionStatusToSlack("Report generated by ashish");
         sendReport.sendTestExecutionReportToSlack(reportPath);
         }catch(Exception e){
        	 Assert.fail("Failed to send report on slack channel");
         }
     	
         
    }

}
